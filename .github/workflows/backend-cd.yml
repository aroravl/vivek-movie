name: Backend CD Workflow

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

  # Automatic trigger on push events to the main branch
  push:
    branches:
      - main

  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches:
      - main

  # Scheduled trigger at 5:00 AM UTC, Monday through Friday
  schedule:
    - cron: '0 5 * * 1-5'


jobs:
  lint:
    runs-on: ubuntu-latest
    environment: VivekEnv
    
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Setup python env
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install deps
      working-directory: starter/backend 
      run:  |
        python -m pip install --upgrade pip
        pip install pipenv
        pip install flake8

    - name: Run the linter
      run: cd starter/backend && pipenv run lint

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Setup Python env
      uses:  actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install deps
      working-directory: starter/backend 
      run:  |
        python -m pip install --upgrade pip
        pip install flake8 pipenv
        

    - name: Run Test
      run: cd starter/backend && pipenv install pytest && pipenv run test

  buildjob:
    needs: [lint, test]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Config AWS creds
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        AWS_ACCOUNT_ID: 787185224543
        ECR_REGISTRY: ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com
        IMAGE_TAG: ${{ env.GITHUB_SHA }}
        IMAGE_REPO_NAME: backend
      run: |
        cd starter/backend 
        docker build -t ${{ env.BACKEND_ECR_REPOSITORY }}:$IMAGE_TAG .
        docker push ${{ env.BACKEND_ECR_REPOSITORY }}:$IMAGE_TAG